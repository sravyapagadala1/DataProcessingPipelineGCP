Setting up Single Node Cloudera Hadoop CDH 6.3 cluster in GCP
=======================================================================
username : sravya_pagadala123
External IP / Public IP address : 35.238.42.190
Internal IP Address : 10.128.0.2
Host Name : instance-1-cdh-hadoop.us-central1-a.c.mystical-surfer-278519.internal

=========================================================================

Reference: https://docs.cloudera.com/documentation/enterprise/latest/topics/install_cm_cdh.html#cmig_topic_6_6

Download the cloudera-manager.repo(Repo File) file for your OS version to the /etc/yum.repos.d/ directory on the Cloudera Manager Server host.

ls /etc/yum.repos.d/

sudo wget https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/cloudera-manager.repo -P /etc/yum.repos.d/

FYI.
sudo yum install wget

Import the repository signing GPG key:

sudo rpm --import https://archive.cloudera.com/cm6/6.3.1/redhat7/yum/RPM-GPG-KEY-cloudera


Install JDK (Java 8)

sudo yum install oracle-j2sdk1.8


Set JAVA_HOME

ls /usr/java/jdk1.8.0_181-cloudera

sudo vi ~/.bashrc

export JAVA_HOME=/usr/java/jdk1.8.0_181-cloudera
export PATH=${PATH}:${JAVA_HOME}/bin

source ~/.bashrc

java -version


Install Cloudera Manager

sudo yum install cloudera-manager-daemons cloudera-manager-agent cloudera-manager-server


==========================================================================================

Cloudera Manager uses various databases and datastores to store information about the Cloudera Manager configuration, as well as information such as the health of the system, or task progress.


wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm

sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm

sudo yum update

sudo yum install mysql-server

sudo systemctl start mysqld

sudo systemctl stop mysqld

==========================================================================================
Move old InnoDB log files /var/lib/mysql/ib_logfile0 and /var/lib/mysql/ib_logfile1 out of /var/lib/mysql/ to a backup location.

sudo cp /var/lib/mysql/ib_logfile0
sudo cp /var/lib/mysql/ib_logfile1

Determine the location of the option file, my.cnf (/etc/my.cnf by default).

Update my.cnf so that it conforms to the following requirements:

[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
transaction-isolation = READ-COMMITTED
# Disabling symbolic-links is recommended to prevent assorted security risks;
# to do so, uncomment this line:
symbolic-links = 0

key_buffer_size = 32M
max_allowed_packet = 32M
thread_stack = 256K
thread_cache_size = 64
query_cache_limit = 8M
query_cache_size = 64M
query_cache_type = 1

max_connections = 550
#expire_logs_days = 10
#max_binlog_size = 100M

#log_bin should be on a disk with enough free space.
#Replace '/var/lib/mysql/mysql_binary_log' with an appropriate path for your
#system and chown the specified folder to the mysql user.
log_bin=/var/lib/mysql/mysql_binary_log

#In later versions of MySQL, if you enable the binary log and do not set
#a server_id, MySQL will not start. The server_id must be unique within
#the replicating group.
server_id=1

binlog_format = mixed

read_buffer_size = 2M
read_rnd_buffer_size = 16M
sort_buffer_size = 8M
join_buffer_size = 8M

# InnoDB settings
innodb_file_per_table = 1
innodb_flush_log_at_trx_commit  = 2
innodb_log_buffer_size = 64M
innodb_buffer_pool_size = 4G
innodb_thread_concurrency = 8
innodb_flush_method = O_DIRECT
innodb_log_file_size = 512M

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

sql_mode=STRICT_ALL_TABLES
==========================================================================================

Ensure the MySQL server starts at boot

sudo systemctl enable mysqld


Start the MySQL server:

sudo systemctl start mysqld

==========================================================================================
Run /usr/bin/mysql_secure_installation to set the MySQL root password and other security-related settings.

sudo /usr/bin/mysql_secure_installation


Download the MySQL JDBC driver

wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.tar.gz

tar zxvf mysql-connector-java-5.1.46.tar.gz


sudo mkdir -p /usr/share/java/
cd mysql-connector-java-5.1.46
sudo cp mysql-connector-java-5.1.46-bin.jar /usr/share/java/mysql-connector-java.jar


==========================================================================================

Create databases and service accounts for components that require databases:

mysql -u root -p


CREATE DATABASE scm DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON scm.* TO 'scm'@'%' IDENTIFIED BY 'scm';


CREATE DATABASE amon DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON amon.* TO 'amon'@'%' IDENTIFIED BY 'amon';


CREATE DATABASE rman DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON rman.* TO 'rman'@'%' IDENTIFIED BY 'rman';


CREATE DATABASE hue DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON hue.* TO 'hue'@'%' IDENTIFIED BY 'hue';


CREATE DATABASE metastore DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON metastore.* TO 'hive'@'%' IDENTIFIED BY 'hive';


CREATE DATABASE sentry DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON sentry.* TO 'sentry'@'%' IDENTIFIED BY 'sentry';


CREATE DATABASE nav DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON nav.* TO 'nav'@'%' IDENTIFIED BY 'nav';


CREATE DATABASE navms DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON navms.* TO 'navms'@'%' IDENTIFIED BY 'navms';


CREATE DATABASE oozie DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;

GRANT ALL ON oozie.* TO 'oozie'@'%' IDENTIFIED BY 'oozie';



SHOW GRANTS FOR 'scm'@'%';

SHOW GRANTS FOR 'amon'@'%';

SHOW GRANTS FOR 'rman'@'%';

SHOW GRANTS FOR 'hue'@'%';

SHOW GRANTS FOR 'hive'@'%';

SHOW GRANTS FOR 'sentry'@'%';

SHOW GRANTS FOR 'nav'@'%';

SHOW GRANTS FOR 'navms'@'%';

SHOW GRANTS FOR 'oozie'@'%';

==========================================================================================

Cloudera Manager Server includes a script that can create and configure a database for itself. 


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql scm scm


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql amon amon


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql rman rman


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql hue hue


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql metastore hive


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql sentry sentry


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql nav nav


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql navms navms


sudo /opt/cloudera/cm/schema/scm_prepare_database.sh mysql oozie oozie


==========================================================================================
Start Cloudera Manager Server:

sudo systemctl start cloudera-scm-server


Wait several minutes for the Cloudera Manager Server to start. To observe the startup process, run the following on the Cloudera Manager Server host:

jetty server default port 7180! 


sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log

sudo tail -n 500 /var/log/cloudera-scm-server/cloudera-scm-server.log

sudo tail -n 10 /var/log/cloudera-scm-server/cloudera-scm-server.log

In a web browser, go to http://<server_host>:7180, where <server_host> is the FQDN or IP address of the host where the Cloudera Manager Server is running.


http://35.238.42.190:7180
==========================================================================================


==========================================================================================Only Debuggin Purpose If you face any issues 
/etc/cloudera-scm-agent/config.ini

sudo cat /etc/cloudera-scm-agent/config.ini

sudo ls /etc/cloudera-scm-server/

sudo service cloudera-scm-server restart

sudo service cloudera-scm-agent restart

==========================================================================================Only Debuggin Purpose If you face any issues 



Log into Cloudera Manager Admin Console. The default credentials are:

Username: admin
Password: admin


Ports to opened:


 20,21,22,8080,7180,8888,3306,8090,18080,8188,11000,50070,14000,9092,27017,9042



